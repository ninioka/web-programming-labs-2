from flask import Blueprint, render_template, request, session, current_app

lab7 = Blueprint('lab7', __name__)


@lab7.route('/lab7/')
def main():
    return render_template('lab7/index.html')


films = [
    {
        "title": "The Hunger Games",
        "title_ru": "Голодные игры",
        "year": 2012,
        "description": "Будущее. Деспотичное государство ежегодно устраивает показательные игры на выживание, \
        за которыми в прямом эфире следит весь мир. Жребий участвовать в Играх выпадает юной Китнисс \
        и тайно влюбленному в нее Питу. Они знакомы с детства, но теперь должны стать врагами. Ведь \
        по нерушимому закону Голодных игр победить может только один из 24 участников. Судьям \
        не важно, кто выиграет, главное — зрелище. И на этот раз зрелище будет незабываемым."
    },
    {
        "title": "Twilight",
        "title_ru": "Сумерки",
        "year": 2008,
        "description": "Семнадцатилетняя девушка Белла переезжает к отцу в небольшой городок Форкс. Она влюбляется \
            в загадочного одноклассника, который, как оказалось, происходит из семьи вампиров, \
            отказавшихся от нападений на людей. Влюбиться в вампира. Это страшно? Это романтично, это \
            прекрасно и мучительно, но это не может кончиться добром, особенно в вечном противостоянии \
            вампирских кланов, где малейшее отличие от окружающих уже превращает вас во врага."
    },
    {
        "title": "Pride & Prejudice",
        "title_ru": "Гордость и предубеждение",
        "year": 2005,
        "description": "Англия, конец XVIII века. Родители пятерых сестер Беннет озабочены тем, чтобы удачно выдать \
            дочерей замуж. И потому размеренная жизнь солидного семейства переворачивается вверх дном, \
            когда по соседству появляется молодой джентльмен - мистер Бингли...\
            \
            Само собой, среди друзей нового соседа оказывается немало утонченных аристократов, которые \
            не прочь поухаживать за очаровательными сестрами. Однако, все не так просто. Своевольная \
            Элизабет знакомится с другом Бингли - красивым и высокомерным мистером Дарси, и между ними \
            разгорается нешуточное противостояние, результатом которого может стать как любовь, так и \
            ненависть..."
    },
    {
        "title": "Titanic",
        "title_ru": "Титаник",
        "year": 1997,
        "description": "В первом и последнем плавании шикарного «Титаника» встречаются двое. \
        Пассажир нижней палубы Джек выиграл билет в карты, а богатая наследница \
        Роза отправляется в Америку, чтобы выйти замуж по расчёту. Чувства молодых \
        людей только успевают расцвести, и даже не классовые различия создадут \
        испытания влюблённым, а айсберг, вставший на пути считавшегося \
        непотопляемым лайнера."
    },
    {
        "title": "Harry Potter and the Sorcerer's Stone",
        "title_ru": "Гарри Поттер и философский камень",
        "year": 2001,
        "description": "Жизнь десятилетнего Гарри Поттера нельзя назвать сладкой: родители умерли, \
        едва ему исполнился год, а от дяди и тёти, взявших сироту на воспитание, \
        достаются лишь тычки да подзатыльники. Но в одиннадцатый день рождения \
        Гарри всё меняется. Странный гость, неожиданно появившийся на пороге, \
        приносит письмо, из которого мальчик узнаёт, что на самом деле он - \
        волшебник и зачислен в школу магии под названием Хогвартс. А уже через \
        пару недель Гарри будет мчаться в поезде Хогвартс-экспресс навстречу новой \
        жизни, где его ждут невероятные приключения, верные друзья и самое главное \
        — ключ к разгадке тайны смерти его родителей."
    }
]


@lab7.route('/lab7/rest-api/films/', methods=['GET'])
def get_films():
    return films


@lab7.route('/lab7/rest-api/films/<int:id>', methods=['GET'])
def get_film(id):
    if id <0 or id >= len(films):
        return "Список фильмов не такой длинный!", 404
    return films[id]


@lab7.route('/lab7/rest-api/films/<int:id>', methods=['DELETE'])
def del_film(id):
    if id < 0 or id >= len(films):
        return 'Такого фильма нет :(', 404 
    del films[id]
    return '', 204